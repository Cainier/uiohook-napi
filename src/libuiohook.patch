diff --git a/src/windows/input_helper.c b/src/windows/input_helper.c
index bce0642..d203779 100644
--- a/src/windows/input_helper.c
+++ b/src/windows/input_helper.c
@@ -303,34 +303,6 @@ unsigned short keycode_to_scancode(DWORD vk_code, DWORD flags) {
     // NOTE vk_code >= 0 is assumed because DWORD is unsigned.
     if (vk_code < sizeof(keycode_scancode_table) / sizeof(keycode_scancode_table[0])) {
         scancode = keycode_scancode_table[vk_code][0];
-
-        if (flags & LLKHF_EXTENDED) {
-            logger(LOG_LEVEL_DEBUG,    "%s [%u]: Using extended lookup for vk_code: %li\n",
-                    __FUNCTION__, __LINE__, vk_code);
-
-            switch (vk_code) {
-                case VK_PRIOR:
-                case VK_NEXT:
-                case VK_END:
-                case VK_HOME:
-                case VK_LEFT:
-                case VK_UP:
-                case VK_RIGHT:
-                case VK_DOWN:
-
-                case VK_INSERT:
-                case VK_DELETE:
-                    scancode |= 0xEE00;
-                    break;
-
-                case VK_RETURN:
-                    scancode |= 0x0E00;
-                    break;
-            }
-        } else {
-            logger(LOG_LEVEL_DEBUG,    "%s [%u]: Using normal lookup for vk_code: %li\n",
-                    __FUNCTION__, __LINE__, vk_code);
-        }
     }
 
     return scancode;
diff --git a/src/windows/input_hook.c b/src/windows/input_hook.c
index 1fb7e71..5d72884 100644
--- a/src/windows/input_hook.c
+++ b/src/windows/input_hook.c
@@ -91,24 +91,24 @@ static void initialize_modifiers() {
     current_modifiers = 0x0000;
 
     // NOTE We are checking the high order bit, so it will be < 0 for a singed short.
-    if (GetKeyState(VK_LSHIFT)   < 0) { set_modifier_mask(MASK_SHIFT_L);     }
-    if (GetKeyState(VK_RSHIFT)   < 0) { set_modifier_mask(MASK_SHIFT_R);     }
-    if (GetKeyState(VK_LCONTROL) < 0) { set_modifier_mask(MASK_CTRL_L);      }
-    if (GetKeyState(VK_RCONTROL) < 0) { set_modifier_mask(MASK_CTRL_R);      }
-    if (GetKeyState(VK_LMENU)    < 0) { set_modifier_mask(MASK_ALT_L);       }
-    if (GetKeyState(VK_RMENU)    < 0) { set_modifier_mask(MASK_ALT_R);       }
-    if (GetKeyState(VK_LWIN)     < 0) { set_modifier_mask(MASK_META_L);      }
-    if (GetKeyState(VK_RWIN)     < 0) { set_modifier_mask(MASK_META_R);      }
+    if (GetAsyncKeyState(VK_LSHIFT)   < 0) { set_modifier_mask(MASK_SHIFT_L);     }
+    if (GetAsyncKeyState(VK_RSHIFT)   < 0) { set_modifier_mask(MASK_SHIFT_R);     }
+    if (GetAsyncKeyState(VK_LCONTROL) < 0) { set_modifier_mask(MASK_CTRL_L);      }
+    if (GetAsyncKeyState(VK_RCONTROL) < 0) { set_modifier_mask(MASK_CTRL_R);      }
+    if (GetAsyncKeyState(VK_LMENU)    < 0) { set_modifier_mask(MASK_ALT_L);       }
+    if (GetAsyncKeyState(VK_RMENU)    < 0) { set_modifier_mask(MASK_ALT_R);       }
+    if (GetAsyncKeyState(VK_LWIN)     < 0) { set_modifier_mask(MASK_META_L);      }
+    if (GetAsyncKeyState(VK_RWIN)     < 0) { set_modifier_mask(MASK_META_R);      }
 
-    if (GetKeyState(VK_LBUTTON)  < 0) { set_modifier_mask(MASK_BUTTON1);     }
-    if (GetKeyState(VK_RBUTTON)  < 0) { set_modifier_mask(MASK_BUTTON2);     }
-    if (GetKeyState(VK_MBUTTON)  < 0) { set_modifier_mask(MASK_BUTTON3);     }
-    if (GetKeyState(VK_XBUTTON1) < 0) { set_modifier_mask(MASK_BUTTON4);     }
-    if (GetKeyState(VK_XBUTTON2) < 0) { set_modifier_mask(MASK_BUTTON5);     }
+    if (GetAsyncKeyState(VK_LBUTTON)  < 0) { set_modifier_mask(MASK_BUTTON1);     }
+    if (GetAsyncKeyState(VK_RBUTTON)  < 0) { set_modifier_mask(MASK_BUTTON2);     }
+    if (GetAsyncKeyState(VK_MBUTTON)  < 0) { set_modifier_mask(MASK_BUTTON3);     }
+    if (GetAsyncKeyState(VK_XBUTTON1) < 0) { set_modifier_mask(MASK_BUTTON4);     }
+    if (GetAsyncKeyState(VK_XBUTTON2) < 0) { set_modifier_mask(MASK_BUTTON5);     }
 
-    if (GetKeyState(VK_NUMLOCK)  < 0) { set_modifier_mask(MASK_NUM_LOCK);    }
-    if (GetKeyState(VK_CAPITAL)  < 0) { set_modifier_mask(MASK_CAPS_LOCK);   }
-    if (GetKeyState(VK_SCROLL)   < 0) { set_modifier_mask(MASK_SCROLL_LOCK); }
+    if (GetAsyncKeyState(VK_NUMLOCK)  < 0) { set_modifier_mask(MASK_NUM_LOCK);    }
+    if (GetAsyncKeyState(VK_CAPITAL)  < 0) { set_modifier_mask(MASK_CAPS_LOCK);   }
+    if (GetAsyncKeyState(VK_SCROLL)   < 0) { set_modifier_mask(MASK_SCROLL_LOCK); }
 }
 
 
diff --git a/src/x11/input_hook.c b/src/x11/input_hook.c
index cd1037f..b1658b1 100644
--- a/src/x11/input_hook.c
+++ b/src/x11/input_hook.c
@@ -30,8 +30,11 @@
 #include <stdint.h>
 #include <uiohook.h>
 
+#ifdef USE_XKBCOMMON
 #include <xcb/xkb.h>
+#else
 #include <X11/XKBlib.h>
+#endif
 
 #include <X11/keysym.h>
 #include <X11/Xlibint.h>
